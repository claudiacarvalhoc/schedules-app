// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ScheduleLogs /> render correctly when schedule logs couldn't be fetched and data was saved as failure 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(ScheduleLogs)>
    <ScheduleLogs
      fetchScheduleLogs={[Function]}
      isSelected={false}
      logs={false}
      resetSelectedSchedule={[Function]}
      scheduleName={false}
      status={2}
      texts={
        Object {
          "buttonRetryText": "Retry",
          "emptyMessageText": "No schedules logs available.",
          "errorMessageText": "Something went wrong ...",
          "noSelectedScheduleText": "Please select a schedule.",
        }
      }
    >
      <div
        className="noinfo"
      >
        <p>
          Please select a schedule.
        </p>
      </div>
    </ScheduleLogs>
  </Connect(ScheduleLogs)>
</Provider>
`;

exports[`<ScheduleLogs /> render correctly when schedule logs has an array data and data was saved sucessfully 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(ScheduleLogs)>
    <ScheduleLogs
      fetchScheduleLogs={[Function]}
      isSelected={false}
      logs={false}
      resetSelectedSchedule={[Function]}
      scheduleName={false}
      status={1}
      texts={
        Object {
          "buttonRetryText": "Retry",
          "emptyMessageText": "No schedules logs available.",
          "errorMessageText": "Something went wrong ...",
          "noSelectedScheduleText": "Please select a schedule.",
        }
      }
    >
      <div
        className="noinfo"
      >
        <p>
          Please select a schedule.
        </p>
      </div>
    </ScheduleLogs>
  </Connect(ScheduleLogs)>
</Provider>
`;

exports[`<ScheduleLogs /> render correctly when schedule logs is empty and data was saved sucessfully 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(ScheduleLogs)>
    <ScheduleLogs
      fetchScheduleLogs={[Function]}
      isSelected={false}
      logs={false}
      resetSelectedSchedule={[Function]}
      scheduleName={false}
      status={1}
      texts={
        Object {
          "buttonRetryText": "Retry",
          "emptyMessageText": "No schedules logs available.",
          "errorMessageText": "Something went wrong ...",
          "noSelectedScheduleText": "Please select a schedule.",
        }
      }
    >
      <div
        className="noinfo"
      >
        <p>
          Please select a schedule.
        </p>
      </div>
    </ScheduleLogs>
  </Connect(ScheduleLogs)>
</Provider>
`;

exports[`<ScheduleLogs /> render correctly when schedule logs is undefined and data was saved sucessfully 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(ScheduleLogs)>
    <ScheduleLogs
      fetchScheduleLogs={[Function]}
      isSelected={false}
      logs={false}
      resetSelectedSchedule={[Function]}
      scheduleName={false}
      status={1}
      texts={
        Object {
          "buttonRetryText": "Retry",
          "emptyMessageText": "No schedules logs available.",
          "errorMessageText": "Something went wrong ...",
          "noSelectedScheduleText": "Please select a schedule.",
        }
      }
    >
      <div
        className="noinfo"
      >
        <p>
          Please select a schedule.
        </p>
      </div>
    </ScheduleLogs>
  </Connect(ScheduleLogs)>
</Provider>
`;
